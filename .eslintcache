[{"C:\\Users\\alona\\Desktop\\Front-end\\Project_7\\P_7_Alona_Vasylchenko\\src\\index.js":"1","C:\\Users\\alona\\Desktop\\Front-end\\Project_7\\P_7_Alona_Vasylchenko\\src\\Components\\AddReview.js":"2","C:\\Users\\alona\\Desktop\\Front-end\\Project_7\\P_7_Alona_Vasylchenko\\src\\Components\\RestaurantInfo.js":"3","C:\\Users\\alona\\Desktop\\Front-end\\Project_7\\P_7_Alona_Vasylchenko\\src\\Components\\LocationMarker.js":"4","C:\\Users\\alona\\Desktop\\Front-end\\Project_7\\P_7_Alona_Vasylchenko\\src\\Components\\SearchLocation.js":"5","C:\\Users\\alona\\Desktop\\Front-end\\Project_7\\P_7_Alona_Vasylchenko\\src\\App.js":"6","C:\\Users\\alona\\Desktop\\Front-end\\Project_7\\P_7_Alona_Vasylchenko\\src\\Components\\AddRestaurant.js":"7","C:\\Users\\alona\\Desktop\\Front-end\\Project_7\\P_7_Alona_Vasylchenko\\src\\Components\\Filters.js":"8","C:\\Users\\alona\\Desktop\\Front-end\\Project_7\\P_7_Alona_Vasylchenko\\src\\Components\\Restaurants.js":"9","C:\\Users\\alona\\Downloads\\Restaurant_review-master\\src\\index.js":"10","C:\\Users\\alona\\Downloads\\Restaurant_review-master\\src\\App.js":"11","C:\\Users\\alona\\Downloads\\Restaurant_review-master\\src\\Components\\AddRestaurant.js":"12","C:\\Users\\alona\\Downloads\\Restaurant_review-master\\src\\Components\\RestaurantInfo.js":"13","C:\\Users\\alona\\Downloads\\Restaurant_review-master\\src\\Components\\AddReview.js":"14","C:\\Users\\alona\\Downloads\\Restaurant_review-master\\src\\Components\\LocationMarker.js":"15","C:\\Users\\alona\\Downloads\\Restaurant_review-master\\src\\Components\\SearchLocation.js":"16","C:\\Users\\alona\\Downloads\\Restaurant_review-master\\src\\Components\\Restaurants.js":"17","C:\\Users\\alona\\Downloads\\Restaurant_review-master\\src\\Components\\Filters.js":"18"},{"size":168,"mtime":1617629723837,"results":"19","hashOfConfig":"20"},{"size":2740,"mtime":1618054533812,"results":"21","hashOfConfig":"20"},{"size":3297,"mtime":1618054545363,"results":"22","hashOfConfig":"20"},{"size":886,"mtime":1618054536164,"results":"23","hashOfConfig":"20"},{"size":2762,"mtime":1618054527185,"results":"24","hashOfConfig":"20"},{"size":6351,"mtime":1618054531017,"results":"25","hashOfConfig":"20"},{"size":4403,"mtime":1618054523334,"results":"26","hashOfConfig":"20"},{"size":2377,"mtime":1618051331009,"results":"27","hashOfConfig":"20"},{"size":1701,"mtime":1618054539296,"results":"28","hashOfConfig":"20"},{"size":231,"mtime":1620575689717,"results":"29","hashOfConfig":"30"},{"size":6304,"mtime":1620578504360,"results":"31","hashOfConfig":"30"},{"size":4469,"mtime":1620578493114,"results":"32","hashOfConfig":"30"},{"size":3246,"mtime":1620576005775,"results":"33","hashOfConfig":"30"},{"size":2850,"mtime":1620578489234,"results":"34","hashOfConfig":"30"},{"size":858,"mtime":1620573935000,"results":"35","hashOfConfig":"30"},{"size":2679,"mtime":1620578478889,"results":"36","hashOfConfig":"30"},{"size":1647,"mtime":1620576002683,"results":"37","hashOfConfig":"30"},{"size":2319,"mtime":1620573935000,"results":"38","hashOfConfig":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"jlwok1",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1fdovpo",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\alona\\Desktop\\Front-end\\Project_7\\P_7_Alona_Vasylchenko\\src\\index.js",[],["79","80"],"C:\\Users\\alona\\Desktop\\Front-end\\Project_7\\P_7_Alona_Vasylchenko\\src\\Components\\AddReview.js",[],"C:\\Users\\alona\\Desktop\\Front-end\\Project_7\\P_7_Alona_Vasylchenko\\src\\Components\\RestaurantInfo.js",[],"C:\\Users\\alona\\Desktop\\Front-end\\Project_7\\P_7_Alona_Vasylchenko\\src\\Components\\LocationMarker.js",[],"C:\\Users\\alona\\Desktop\\Front-end\\Project_7\\P_7_Alona_Vasylchenko\\src\\Components\\SearchLocation.js",["81"],"C:\\Users\\alona\\Desktop\\Front-end\\Project_7\\P_7_Alona_Vasylchenko\\src\\App.js",["82"],"C:\\Users\\alona\\Desktop\\Front-end\\Project_7\\P_7_Alona_Vasylchenko\\src\\Components\\AddRestaurant.js",[],"C:\\Users\\alona\\Desktop\\Front-end\\Project_7\\P_7_Alona_Vasylchenko\\src\\Components\\Filters.js",[],"C:\\Users\\alona\\Desktop\\Front-end\\Project_7\\P_7_Alona_Vasylchenko\\src\\Components\\Restaurants.js",["83"],"C:\\Users\\alona\\Downloads\\Restaurant_review-master\\src\\index.js",[],["84","85"],"C:\\Users\\alona\\Downloads\\Restaurant_review-master\\src\\App.js",["86"],"import React, {useState,  useEffect} from 'react';\nimport restaurantsInfo from \"./RestaurantsList.json\";\nimport \"./App.css\";\nimport {MapContainer, Marker, Popup, TileLayer, useMapEvents} from \"react-leaflet\";\nimport Restaurants from \"./Components/Restaurants.js\";\nimport LocationMarker from \"./Components/LocationMarker\";\nimport {Filters} from \"./Components/Filters.js\";\nimport SearchLocation from \"./Components/SearchLocation.js\";\nimport {Icon} from \"leaflet\";\nimport {Row, Col} from \"react-bootstrap\";\nimport RestaurantInfo from './Components/RestaurantInfo';\n\nlet comments = [];\nlet aname;\nlet imgRequest=\"\";\nlet commentsForRestaurant;\nconst defaultZoom = 15;\n\nconst MapEvents = ({setBbox}) => {\n    const setBounds = () => setBbox(map.getBounds());\n    const map = useMapEvents({\n        moveend: setBounds\n    });\n    return null;\n};\nconst restaurantMarker = new Icon({\n    iconUrl: \"/restaurant.png\",\n    iconSize: [25, 25]\n});\nexport default function App() {\n    const [map, setMap] = useState(null);\n    const [coordinates, setCoordinates] = useState({ lat: \"\", lng: \"\" });\n    const [restaurantsAsArray, setRestaurantsAsArray] = useState(Object.keys(restaurantsInfo).map((pid) => restaurantsInfo[pid]), );\n    const [chosenRestaurant, setChosenRestaurant] = useState(null);\n    const [bbox, setBbox] = useState(null);\n    const [minRate, setMinRate] = useState(1);\n    const [maxRate, setMaxRate] = useState(5);\n    const [newRestaurantLat, setNewRestaurantLat] = useState(null);\n    const [newRestaurantLng, setNewRestaurantLng] = useState(null);\n    const [isAddingReview, setIsAddingReview] = useState(false);\n    const [isAddingRestaurant, setIsAddingRestaurant] = useState(false);\n\n    useEffect(() => {\n        if (map && coordinates.lat && coordinates.lng) map.setView(coordinates);\n      }, [map, coordinates]);\n\n    const NewRastaurantPosition = () => {\n        const map = useMapEvents({\n            click(e) {\n                setNewRestaurantLat(e.latlng.lat);\n                setNewRestaurantLng(e.latlng.lng);\n                console.log(newRestaurantLat);\n            },\n        })\n        return (\n                null\n        )\n    }\n\n    return (\n        <div style={{backgroundColor: \"#e3ffeb\"}}>\n        <div  className=\"cont\" >\n        <Row>\n        <Col xs={12} md={5} style={{padding:\"20px\"}}>        \n            <MapContainer\n                center={[49.1951, 16.6068]}\n                zoom={defaultZoom}\n                scrollWheelZoom={false}\n                whenCreated={(map) => { setBbox(map.getBounds()); setMap(map) }}\n            >\n            <NewRastaurantPosition/>\n            <MapEvents setBbox={setBbox}/>\n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <LocationMarker bbox={bbox} setBbox={setBbox} coordinates={coordinates}/>\n                {restaurantsAsArray.map(restaurant => (\n            <Marker\n                key={restaurant.ID}\n                position={[\n                restaurant.lat, restaurant.long\n                ]}\n                icon={restaurantMarker}\n                eventHandlers={{\n                    click: () => {\n                        setChosenRestaurant(restaurant);\n                        aname = restaurant.restaurantName;\n                        imgRequest=\"https://maps.googleapis.com/maps/api/streetview?location=\"+\n                        restaurant.lat+\",\"+restaurant.long+\n                        \"&size=120x120&key=AIzaSyCWua-R7xTJQCizx-9TXsoE8DHoY5IvcRc\";\n                        commentsForRestaurant = \"Comments for \" + aname + \":\";\n                        comments = [];\n                        for (let i = 0; i < restaurant.ratings.length; i++) {\n                            comments.push(restaurant.ratings[i].comment);\n                        }                                              \n                        setChosenRestaurant(null);\n                        setChosenRestaurant(restaurant);                                               \n                    },}\n                }\n            />\n                ))}\n                {chosenRestaurant && (\n                <Popup\n                    position={[\n                        chosenRestaurant.lat,\n                        chosenRestaurant.long\n                    ]}\n                    onClose={() => {\n                        setChosenRestaurant(null);\n                    }}\n                >\n                <div>\n                    <h2>{chosenRestaurant.restaurantName}</h2>\n                     <p>{chosenRestaurant.address}</p>\n                </div>\n                </Popup>\n                )}\n            </MapContainer>\n            {/* </div> */}\n            </Col>\n            <Col xs={12} md={4} lg={4} style={{padding:\"20px\"}}>\n            <center><SearchLocation coordinates={coordinates} setCoordinates={setCoordinates} \n                                    setRestaurantsAsArray={setRestaurantsAsArray}\n                                    restaurantsAsArray={restaurantsAsArray}\n            /></center>\n            <Filters\n                setMinRate={setMinRate}\n                setMaxRate={setMaxRate}\n            />\n            <RestaurantInfo\n               isAddingReview = {isAddingReview} setIsAddingReview = {setIsAddingReview}\n                isAddingRestaurant = {isAddingRestaurant} setIsAddingRestaurant = {setIsAddingRestaurant}\n                bbox={bbox} chosenRestaurant={chosenRestaurant} \n                setRestaurantsAsArray={setRestaurantsAsArray}\n                restaurantsAsArray={restaurantsAsArray}\n                newRestaurantLat={newRestaurantLat} newRestaurantLng={newRestaurantLng}  \n            />\n            </Col>\n            <Col xs={12} md={3} lg={3} style={{backgroundColor:\"#d0f5da\", padding:\"20px\"}}>\n            <Restaurants bbox={bbox} minRate={minRate}\n                maxRate={maxRate} restaurantsAsArray={restaurantsAsArray}\n                isAddingRestaurant = {isAddingRestaurant} setIsAddingRestaurant = {setIsAddingRestaurant}\n            />\n            </Col>\n         </Row>\n        </div>\n        </div>\n    );\n}\nexport {commentsForRestaurant, comments, Marker, MapContainer, imgRequest};\n\n\n\n\n\n\n","C:\\Users\\alona\\Downloads\\Restaurant_review-master\\src\\Components\\AddRestaurant.js",[],"C:\\Users\\alona\\Downloads\\Restaurant_review-master\\src\\Components\\RestaurantInfo.js",[],"C:\\Users\\alona\\Downloads\\Restaurant_review-master\\src\\Components\\AddReview.js",[],"C:\\Users\\alona\\Downloads\\Restaurant_review-master\\src\\Components\\LocationMarker.js",[],"C:\\Users\\alona\\Downloads\\Restaurant_review-master\\src\\Components\\SearchLocation.js",["87"],"import React,{useState, useEffect} from \"react\";\nimport PlacesAutocomplete,  {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\n\nlet service;\nlet latLng =null;\n\nexport default function SearchLocation({setCoordinates, restaurantsAsArray, setRestaurantsAsArray,}) {\n  const [address, setAddress] = useState(\"\");\n  const google = window.google;\n  const handleSelect = async value => {\n    const results = await geocodeByAddress(value);\n    latLng = await getLatLng(results[0]);\n    setAddress(value);\n    setCoordinates(latLng);\n    console.log(latLng);\n  }\n\n  useEffect(() => {\n    if (latLng!=null) {\n      var request = {\n        location: latLng,\n        radius: '1000',\n        type: ['restaurant']\n      };\n      service = new google.maps.places.PlacesService(document.createElement('div'));\n      service.nearbySearch(request, callback);\n      function callback(results, status) {\n        if (status === google.maps.places.PlacesServiceStatus.OK) {\n            for (var i = 0; i < results.length; i++) {\n              let newRestaurant = {\n                \"restaurantName\": results[i].name,\n                \"ID\": results[i].place_id,\n                \"address\": results[i].vicinity,\n                \"lat\": results[i].geometry.location.lat(),\n                \"long\": results[i].geometry.location.lng(),\n                \"ratings\": [\n                    {\n                        \"stars\": results[i].rating,\n                        \"comment\": \"No comments yet\"\n                    }\n                ]\n            };\n            let newArray = restaurantsAsArray;\n            newArray.push(newRestaurant);\n            setRestaurantsAsArray(newArray);           \n            }\n            }}}\n    // console.log(restaurantsAsArray);\n  }, [latLng]);\n\n  return (\n    <div className=\"searchLocation\" style={{margin: \"300 px\"}}>\n      <PlacesAutocomplete\n        value={address}\n        onChange={setAddress}\n        onSelect={handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            <input {...getInputProps({ placeholder: \"Type address\" })} />\n            <div>\n              {loading ? <div>...loading</div> : null}\n\n              {suggestions.map(suggestion => {\n                const style = {\n                  backgroundColor: suggestion.active ? \"#8fffaf\" : \"#fff\"\n                };\n                return (\n                  <div {...getSuggestionItemProps(suggestion, { style })}>\n                    {suggestion.description}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n    </div>\n  );\n}\n","C:\\Users\\alona\\Downloads\\Restaurant_review-master\\src\\Components\\Restaurants.js",["88"],"C:\\Users\\alona\\Downloads\\Restaurant_review-master\\src\\Components\\Filters.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":52,"column":6,"nodeType":"95","endLine":52,"endColumn":14,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":49,"column":15,"nodeType":"99","messageId":"100","endLine":49,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":11,"column":41,"nodeType":"103","messageId":"104","endLine":11,"endColumn":43},{"ruleId":"89","replacedBy":"105"},{"ruleId":"91","replacedBy":"106"},{"ruleId":"97","severity":1,"message":"98","line":48,"column":15,"nodeType":"99","messageId":"100","endLine":48,"endColumn":18},{"ruleId":"93","severity":1,"message":"94","line":52,"column":6,"nodeType":"95","endLine":52,"endColumn":14,"suggestions":"107"},{"ruleId":"101","severity":1,"message":"102","line":11,"column":41,"nodeType":"103","messageId":"104","endLine":11,"endColumn":43},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'google.maps.places.PlacesService', 'google.maps.places.PlacesServiceStatus.OK', 'restaurantsAsArray', and 'setRestaurantsAsArray'. Either include them or remove the dependency array. Outer scope values like 'latLng' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["110"],"no-unused-vars","'map' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["108"],["109"],["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"112","fix":"114"},"Update the dependencies array to be: [google.maps.places.PlacesService, google.maps.places.PlacesServiceStatus.OK, restaurantsAsArray, setRestaurantsAsArray]",{"range":"115","text":"116"},{"range":"117","text":"116"},[1807,1815],"[google.maps.places.PlacesService, google.maps.places.PlacesServiceStatus.OK, restaurantsAsArray, setRestaurantsAsArray]",[1756,1764]]